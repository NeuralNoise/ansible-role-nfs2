---

- name: Include Ubuntu15 or later specific variables
  include_vars: "Ubuntu15.yml"
  when: >
    nfs_packages is not defined and
    ansible_distribution == "Ubuntu" and
    ansible_distribution_major_version|int >= 15

- name: Include Fedora21/RedHat7 or later specific variables
  include_vars: "RedHat7.yml"
  when: >
    nfs_packages is not defined and
    ansible_os_family == "RedHat" and
    ((ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 21) or
    (ansible_distribution != "Fedora" and ansible_distribution_major_version|int >= 7))

- name: Include OS specific variables (RedHat/Debian)
  include_vars: "{{ ansible_os_family }}.yml"
  when: nfs_packages is not defined

- name: Install nfs-utils when Fedora22+
  dnf: name="{{ item }}" state=installed
  with_items: nfs_packages
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22

- name: Install libselinux-python when ansible_os_family is RedHat
  yum: name="libselinux-python" state=installed
  when: ansible_os_family == "RedHat"

- name: Install nfs-utils when ansible_os_family is RedHat
  yum: name="{{ item }}" state=installed
  with_items: nfs_packages
  when: >
    ansible_os_family == "RedHat" and
    not (ansible_distribution == "Fedora" and
         ansible_distribution_major_version|int >= 22)

- name: apt-get update when ansible_os_family is Debian
  apt: update_cache=yes
  when: ansible_os_family == "Debian"

- name: Install nfs-kernel-server when ansible_os_family is Debian
  apt: name="{{ item }}" state=installed
  with_items: nfs_packages
  when: ansible_os_family == "Debian"

- name: Ensure NFS service started and enabled
  service: name="{{ item }}" state=started enabled=yes
  with_items: nfs_services

- name: Setup Ports
  lineinfile: dest="{{ nfs_config_file }}"
              regexp="^#?{{ item.name }}"
              line='{{ item.name }}={{ item.value }}'
  with_items: nfs_ports
  notify: restart nfs services

- name: Ensure exported directory exists
  file: path="{{ item.path }}" state=directory
        owner='{{ item.owner|default(nfs_default_owner) }}'
        group='{{ item.group|default(nfs_default_group) }}'
        mode='{{ item.mode|default("0777") }}'
  with_items: nfs_exported_directories

- name: Ensure exported directories are in /etc/exports
  lineinfile: dest=/etc/exports
              regexp="^{{ item.path }}\s"
              line='{{ item.path }} {% for host in item.hosts %} {{ host.name }}({{ host.options|default([])|join(",") }}){% endfor %}'
  with_items: nfs_exported_directories
  notify: refresh exports
